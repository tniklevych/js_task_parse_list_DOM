{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC1C,EAAgB,SAAS,aAAa,CAAC,MAE7C,SAAS,EAAM,CAAM,EAInB,MAAO,CAFc,AADD,EACa,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,GAGjE,CAGE,AAeW,EAfL,IAAI,CAAC,SAAC,CAAA,CAAG,CAAf,EAAqB,OAAA,EAAM,EAAE,OAAO,CAAC,MAAM,EAAI,EAAM,EAAE,OAAO,CAAC,MAAM,C,GAErE,AAasB,EAbjB,QAAQ,CAAG,GAChB,AAYW,EAZL,OAAO,CAAC,SAAC,CAAf,EAAwB,OAAA,AAYF,EAZO,WAAW,CAAC,E,GAIlC,AAUI,EAVE,GAAG,CAAC,SAAC,CAAlB,EAA4B,MAAA,CAC1B,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listItems = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar employeesList = document.querySelector(\"ul\");\nfunction toNum(string) {\n    var dolarString = string;\n    var numberString = dolarString.replace(\"$\", \"\").replace(\",\", \"\");\n    return +numberString;\n}\nfunction sortBySalary(items, list) {\n    items.sort(function(a, b) {\n        return toNum(b.dataset.salary) - toNum(a.dataset.salary);\n    });\n    list.inerHTML = \"\";\n    items.forEach(function(item) {\n        return list.appendChild(item);\n    });\n}\nfunction getEmployees(items) {\n    return items.map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n    });\n}\nsortBySalary(listItems, employeesList);\ngetEmployees(listItems);\n\n//# sourceMappingURL=index.fd73e321.js.map\n","'use strict';\n\nconst listItems = [...document.querySelectorAll('li')];\nconst employeesList = document.querySelector('ul');\n\nfunction toNum(string) {\n  const dolarString = string;\n  const numberString = dolarString.replace('$', '').replace(',', '');\n\n  return +numberString;\n}\n\nfunction sortBySalary(items, list) {\n  items.sort((a, b) => toNum(b.dataset.salary) - toNum(a.dataset.salary));\n\n  list.inerHTML = '';\n  items.forEach((item) => list.appendChild(item));\n}\n\nfunction getEmployees(items) {\n  return items.map((item) => ({\n    name: item.textContent.trim(),\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: item.dataset.age,\n  }));\n}\n\nsortBySalary(listItems, employeesList);\n\ngetEmployees(listItems);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","listItems","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","employeesList","querySelector","toNum","string","dolarString","replace","items","sort","a","b","dataset","salary","list","inerHTML","forEach","item","appendChild","map","textContent","trim","position","age"],"version":3,"file":"index.fd73e321.js.map"}